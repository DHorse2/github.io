var searchIndex = JSON.parse('{\
"clipmdplus":{"doc":"doc for ClipMdPlus main Normal crate documentation goes …","t":"YYYYAAFADLLMMMMLLLLLALLLLLMMLLMLMMMMMLLLLLMLADDDMMMLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLMLMLLLMMLLLLLLLLLLLLLLLLLDDDDDEDNNLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMMMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAENENDDDDDDDNENNNNNNEDNDNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLMLLLLLLLLLLLLLLLLLIQQQIQQIQEQNNQQNNNNLLLLLLKKKKKKKKKLLLLLLLLKKLLLLLLKLLLLLLNNNENNNDDENNNNDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIAAAAFKFFFFDLLLLLLMLLLLLLMLLLLLLDLLLLMLLLLLLLLMMLLLLLLLLLNNNNNNNNNNNNEGENNNEGELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNDDENNNNNNNNNNNNNNNLLLLLLLLLLLLLLMMLLLMLLLMLLLLLLLLLLLLLLL","n":["Deserialize_enum","Name","Serialize_enum","VariantName","clip_form","clip_util","main","stdmd","ClipForm","borrow","borrow_mut","clip_data_last","clip_hist","clip_meta","clip_meta_out","clipboard_data_get","clipboard_data_read","clone","clone_into","default","egui","eq","file_open","fmt","fmt","from","has_file","hyperlink_list","initialize_clip_component","into","prog_control","run","sequence","sequence_number_current","sequence_number_selected","show_from_menu","show_when_minimized","to_owned","to_string","try_from","try_into","type_id","ui_type","vzip","native","ClipFormEgui","FormWindow","WindowOptions","anchor","anchor_offset","anchored","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","closable","collapsible","default","default","default","deserialize","disabled_time","eq","eq","equivalent","equivalent","from","from","from","into","into","into","name","name","new","resizable","run","scroll2","serialize","show","show","title","title_bar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ui","ui","update","vzip","vzip","vzip","ClipMeta","ClipboardHistory","ClipboardMeta","DoSerial","IDataObject","Message","ProgControl","Request","Response","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clip_count","clip_data","clip_i_data","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","data_creation_time","data_processed","data_synced","data_type","date_time_offset","db_connect","db_disconnect","db_execute","db_exists","db_row_delete","db_row_exists","db_row_get","db_row_insert","db_row_update","db_type","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_json","from_row","hash","hash","hash","history","history","i_data","id_key","id_key_current","id_system","into","into","into","into","into","into","into","load_json","name","name","name","new","partial_cmp","partial_cmp","partial_cmp","sequence_number","sequence_number","serialize","serialize","serialize","serialize","serialize","serialize","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","app_error","date_std","db_api","hyperlink","types","AppError","Client","DbError","DbError","DbErrorData","DbErrorDataClient","DbErrorDataDe","DbErrorDataIo","DbErrorDataPostgres","DbErrorDataSer","DbErrorDataStd","Deserialize","GuiError","InvalidClipboardData","InvalidConversion","InvalidInput","Io","IoError","Json","JsonError","JsonErrorData","Parsing","PhantomError","PhantomError","Postgres","Serde","Serialize","Std","StdIoError","UiError","Unknown","Unknown","Unknown","Unknown","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","column","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","enum_name","enum_name","enum_name","enum_name","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","line","message","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","provide","provide","provide","provide","provide","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","stack","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_name","variant_name","variant_name","variant_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DataCreationTime","borrow","borrow_mut","clone","clone_into","datetimesystem","default","deserialize","eq","equivalent","equivalent","fmt","fmt","from","into","new","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DbApi","DbClient","DbClient","DbClientError","DbCrud","DbError","DbError","DbJson","DbRow","DbType","DbType","InMemory","Json","JsonError","JsonResult","Last","None","Other","Postgres","as_str","borrow","borrow_mut","clone","clone_into","cmp","db_connect","db_disconnect","db_execute","db_exists","db_row_delete","db_row_exists","db_row_get","db_row_insert","db_row_update","deserialize","enum_name","eq","equivalent","equivalent","fmt","from","from","from_json","from_row","hash","into","load_json","name","partial_cmp","serialize","to_json","to_owned","try_from","try_into","type_id","variant_name","vzip","BatDocument","CodeDocument","Document","DocumentTypeIs","ExcelDocument","Folder","Hyperlink","HyperlinkList","HyperlinkMeta","HyperlinkTypeIs","MailTo","None","None","OpenOfficeDocument","ProcessStartInfo","ScriptDocument","TextDocument","UncFile","UncFolder","WordDocument","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","document_type","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hashmap","hyperlink_data","hyperlink_type","into","into","into","into","into","new","new_document_type","new_hyperlink_type","new_process_name","process_name","process_startup_info","serialize","serialize","serialize","serialize","set_hyperlink_data","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","NamedAny","range","sequence","type_form","type_format","type_is_equal","type_name","type_name_from_id","type_name_of","type_name_of_val","type_of_val","Range","borrow","borrow_mut","clone","clone_into","default","deserialize","end","eq","fmt","fmt","from","into","serialize","start","to_owned","to_string","try_from","try_into","type_id","vzip","Sequence","borrow","borrow_mut","clone","clone_into","current","default","deserialize","eq","fmt","fmt","from","into","new","page","selected","sequence_get","sequence_set","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ContextMenu","Eframe","EframeRunNative","Egui","EguiError","EguiNative","EguiWeb","ManyMore","Modal","None","None","Tauri","UiError","UiResult","UiType","Unknown","Web","Window","WindowError","WindowResult","WindowType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Bitmap","CommaSeparatedValue","Dib","Dif","EnhancedMetafile","FileDrop","Format","FormatList","FormatType","Html","Locale","MetafilePict","OemText","Palette","PenData","Riff","Rtf","Serializable","StringFormat","SymbolicLink","Text","Tiff","UnicodeText","WaveAudio","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","format","format","from","from","from","id","into","into","into","name","new","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"clipmdplus"],[8,"clipmdplus::clip_form"],[44,"clipmdplus::clip_form::egui"],[45,"clipmdplus::clip_form::egui::native"],[106,"clipmdplus::clip_util"],[265,"clipmdplus::stdmd"],[270,"clipmdplus::stdmd::app_error"],[570,"clipmdplus::stdmd::date_std"],[593,"clipmdplus::stdmd::db_api"],[650,"clipmdplus::stdmd::hyperlink"],[759,"clipmdplus::stdmd::types"],[770,"clipmdplus::stdmd::types::range"],[791,"clipmdplus::stdmd::types::sequence"],[816,"clipmdplus::stdmd::types::type_form"],[889,"clipmdplus::stdmd::types::type_format"]],"d":["doc todo create_ser_arms","Name","doc todo create_ser_arms","VariantName","The window and form. todo some design notes re the form. …","Design: A clipboard history should not have a UI, a UI …","Function main (bin) for ClipMdPlus. Loads the clipboard …","Application specific standard library. NOT std. This is …","This is the meta data for the ClipForm. It include form …","","","Last Clipboard String","A vector containing the history of clips.","The meta data for the current clip.","The meta data in string form. Not going to be used?","","","","","","The egui crate is used along with eframe to create the …","","","","","Returns the argument unchanged.","","Hyperlinks extracted from the current clip.","","Calls <code>U::from(self)</code>.","Constants, std and core functionality not implemented. …","Create the form using the run function.","Os clipboard chain pointer","This is the internal next unique clip id.","This is a range of unique clip id’s currently selected …","","","","","","","","The user interface type used by the form (egui currently).","","The ClipForm egui implimentation. UI selection is still in …","ClipForm using the Egui Native UI crate","The Form Window layout definition","Form Window Options and widget - egui eframe vs","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Window Name","Window Name","Create a new egui window from a CreationContext using …","","Create a new egui window using eframe","","","Window Show","Window Show","","","","","","","","","","","","","","windwo Ui window layout definition","Window Ui layout definition","Update the egui eframe window","","","","This is the meta data associated with a clipboard clip. …","A vector containing the clipboard history loaded from the …","ClipboardMeta contains permissions, persistence and sync …","DoSerial is a remanant is it’s purpose for serialization …","The IDataOject represent raw clipboard data return by the …","","The ProgControl object is serialized. It is used to …","The request.","The response.","","","","","","","","","","","","","","","The total size of the history","Internal (this) clipboard data This is an object. In rust …","Clipboard data object this is the OS object of Format Type …","","","","","","","","","","","","","","System time as UTC","Updated","Synchronization","Clipboard data type","","","","","","","","","","","The database type (Postgres)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","History Vector More performant for immutable data. todo …","","Unique auto-generated key (compliant) (This would have a …","The current (redundant) unique key for clipboard history.","System Unique ID GUID and MACs are all possible options it …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","New: Default and T","","","","Order of clip history","The current unique key for clipboard history.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a learning task.  todo Over defined errors are all over …","A non-standard date time object that has future use.","Simple database traits (C# friendly)","Internet, file, folder, email, phone and document links.","types handling library.","App error is a simplified error type. It might be returned …","#[error(“database client error {DbErrorDataClient::Name}…","A custom database error.","from the database.","DbErrorData. This it temporay. It evolved to this mess …","DbErrorDataClient","DbErrorDataDe","DbErrorDataIo","DbErrorDataPostgres","DbErrorDataSer","DbErrorDataStd","#[error(“deserialize error {DbErrorDataDe}”)]","Errors received from GUI components or upon validation.","The clipboard data is bad and can’t be used.","Unable to convert the value.","Entry format invalid (ie like dates).","Generic or unknown IO errors.","Errors received from std::io.","#[error(“json error {JsonErrorData}”)]","A custom JsonError needed later.","JsonErrorData","A Json parsing error.","PhantomData for Errors.","#[error(“phantom error”)]","#[error(“postgres SQL error {DbErrorDataPostgres}”)]","Serde errors.","#[error(“serialize error {DbErrorDataSer}”)]","#[error(“general std error {DbErrorDataStd}”)]","#[error(transparent)] StdIoError(#[from] std::io::Error),","from the UI.","Unknown source.","The error type, source or cause is unknown.","#[error(“unknown error {DbErrorData}”)]","Unknown {#[from]  data: String },","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new empty DbErrorData.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DataCreationTime is a (currently unused) module’s whose …","","","","","The data being stored. There are several type options. The …","creates a new DateTime. Similarly to new() it is set to …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","creates a new DateTime set to now().","","","","","","","","! DpApi …","The database client used for accessing the DB.","The database client used for accessing the DB.","The database client error if it is used.","! DbCrud …","The error return by the implementation.","The error return by the implementation.","! bJson …","A database client row (record).","! DbType …","The database type.","InMemory is a temporary history.","Json.","The error returned by Json processing.","The result returned by Json processing.","Last would have no history. The clip output processing …","None (save as Last). No history. todo That creates …","Other (from client).","Postgres.","","","","","","","Connect to the database.","Disconnect from the database.","Execute a database command.","Check to see if the database exists.","Delete a row in the database.","Check if the database row already exists.","Get the database row.","Insert a row into the database.","Update an existing row in the database.","","","","","","","Returns the argument unchanged.","","Load self from Json formatted data.","Convert the database row to Self.","","Calls <code>U::from(self)</code>.","Get the Json data from disk and load Self.","","","","Convert self to Json format.","","","","","","","A Windows Bat script.","Text that is a programming language.","A file link.","DocumentTypeIs","MS Excel (r) document.","A folder link.","A web url link.","HyperlinkList","","HyperlinkTypeIs","An email address.","The null case.","None null choice.","An Open Office document.","This Process (app) Startup Info is generic to any …","A script or partial script.","Plain text.","A file link using UNC.","A folder link using UNC.","MS Word (r) formatted document.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The document type pointed to.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The extracted hyperlink.","The link’s type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new default empty hyperlink.","Creates a new hyperlink and sets the process name, link …","Creates a new hyperlink and sets the process name, link …","Creates a new hyperlink and sets the process name.","What process handles the link.","The startup parameter string required by the process.","","","","","Sets the process name, link type and document type.","","","","","","","","","","","","","","","","","","","","","","","","","","","A range object. (todo student)","A sequence object (todo student)","Types of forms and UI types.","The knows format types of entities.","Compare the types of two Sized objects. ","","Given a TypeId it returns its name as a static str.","The type name done another way. (todo student)","The type name of T as a static str.","Returns the TypeId of T.","A trivial range object.","","","","","","","The end.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","The start.","","","","","","","A trivial sequence object .","","","","","The current value.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Possible paging handling.","The sequence range that is selected.","","","","","","","","","","Context (right click) UI objects.","Egui EFrame had an error.","Error comes from EFrame (for egui)","Egui had an error.","An egui error.","Uses the Egui Native OS rendering crate.","Uses the Egui Web interface.","A number of UI crates are being evaluated.","Modal windows can be sized and/or maximised.","A user interface is not a requirement. The clipboard can …","not used.","This is just an example. Not used.","UiError is the custom error used. It indicates the source …","UiResult using a String and UiError.","UiType indicates the crate used to generates the UI form. …","Unknown origin of error.","The error came from the Web interface. It eventually could …","The window had a WindowError.","Window Error is the custom error used. It indicates the …","WindowResult using a String and WindowError.","There are multiple forms (ui components) planned. …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Bitmap (bmp) image data.","Comma separated text (csv).","todo Dib. ","todo Dif.","todo EnhancedMetafile.","todo FileDrop.","using oringinally System.Windows.Forms.DataFormats.Format …","Clipboard Format Type Name enumeration #region Clipboard …","Clipboard Format Type enumeration #region Clipboard Format …","Html formatted markup text.","todo Locale.","todo MetafilePict.","todo OemText.","todo Palette.","todo PenData.","todo Riff.","Rtf rich text format.","todo Serializable.","todo StringFormat.","todo SymbolicLink.","Text data.","todo Tiff.","Unicode Text data.","WaveAudio (wav) audio data.","","","","","","","","","","","","","","","FormatList,format contains a vectors of Format objects.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Build the format list using standard windows format. todo …","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,12,12,12,13,11,12,13,11,12,11,12,11,12,12,12,13,11,12,11,12,11,12,11,11,13,11,12,13,11,12,11,12,13,12,13,12,11,11,12,12,12,11,12,13,11,12,13,11,12,13,11,12,11,12,13,13,11,12,0,0,0,0,0,0,0,30,30,67,21,22,23,24,25,30,67,21,22,23,24,25,30,25,24,24,21,22,23,24,25,21,22,23,24,25,22,23,24,24,24,24,24,25,24,24,24,24,24,24,24,24,24,25,21,24,25,21,22,23,24,25,30,21,22,23,24,25,21,21,22,22,23,23,24,24,21,22,23,24,24,25,67,21,22,22,23,24,25,30,24,24,22,23,24,22,23,21,24,25,24,67,21,22,23,24,25,30,24,22,23,24,24,22,23,24,24,25,21,22,23,24,25,30,24,21,22,23,24,25,24,67,21,22,23,24,25,30,67,21,22,23,24,25,30,67,21,22,23,24,25,30,67,21,22,23,24,25,30,0,0,0,0,0,0,41,0,43,0,0,0,0,0,0,0,41,0,44,44,44,42,42,41,0,0,42,0,41,41,42,41,41,41,43,43,44,41,42,68,33,34,35,36,37,38,39,40,43,44,41,42,68,33,34,35,36,37,38,39,40,43,44,41,42,33,34,35,36,37,38,39,40,41,42,33,34,35,36,37,38,39,40,41,42,33,34,35,36,37,38,39,40,33,33,34,35,36,37,38,39,40,43,44,41,42,43,44,41,42,33,34,35,36,37,38,39,40,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,33,33,33,34,35,36,37,38,39,40,43,43,44,44,41,41,42,42,68,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,43,44,41,41,41,41,41,41,41,41,41,41,41,41,42,33,34,35,36,37,38,39,40,68,33,34,35,36,37,38,39,40,43,44,41,42,33,33,33,33,34,35,36,37,38,39,40,33,43,44,41,42,33,34,35,36,37,38,39,40,43,44,41,42,33,33,34,35,36,37,38,39,40,41,42,33,43,44,41,42,68,33,34,35,36,37,38,39,40,43,44,41,42,68,33,34,35,36,37,38,39,40,43,44,41,42,68,33,34,35,36,37,38,39,40,43,44,41,42,43,44,41,42,68,33,34,35,36,37,38,39,40,43,44,41,42,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,69,70,69,0,69,70,0,70,0,69,49,49,71,71,49,49,49,49,49,49,49,49,49,49,69,69,69,69,70,70,70,70,70,49,49,49,49,49,49,49,49,71,70,49,49,71,49,49,49,71,49,49,49,49,49,49,55,55,54,0,55,54,54,0,0,0,54,54,55,55,0,55,55,54,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,54,55,51,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,53,51,51,51,52,53,54,55,51,51,51,51,51,51,51,52,54,55,51,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,0,0,0,0,0,0,72,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,62,61,63,61,63,9,9,9,62,9,61,9,0,0,0,63,61,61,0,0,0,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,9,61,62,63,65,65,65,65,65,65,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,66,64,65,66,64,65,64,65,64,65,64,65,64,65,66,64,66,64,65,64,66,64,65,64,66,64,65,66,64,65,66,64,65,66,64,65,66,64,65],"f":[0,0,0,0,0,0,[[],[[2,[1]]]],0,0,[[]],[[]],0,0,0,0,[[3,4],[[2,[4,5]]]],[[3,6],[[2,[4,5]]]],[3,3],[[]],[[],3],0,[[3,3],4],[3,[[2,[4,5]]]],[[3,7],8],[[3,7],8],[[]],0,0,[[3,9],[[2,[4,5]]]],[[]],0,[[3,9],[[2,[4,5]]]],0,0,0,0,0,[[]],[[],5],[[],2],[[],2],[[],10],0,[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[12,12],[[]],[[]],0,0,[[],13],[[],11],[[],12],[14,[[2,[11]]]],0,[[11,11],4],[[12,12],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[11,6],[12,6],[15,13],0,[[],16],0,[[11,17],2],[[11,18,4]],[[12,18,4]],0,0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[11,19]],[[12,19]],[[13,18,20]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[21,21],[22,22],[23,23],[24,24],[25,25],[[]],[[]],[[]],[[]],[[]],[[22,22],26],[[23,23],26],[[24,24],26],0,0,0,0,0,[[],2],[[],[[2,[4]]]],[[24,6,[28,[27]]],[[2,[29]]]],[24,[[2,[4]]]],[24,[[2,[29]]]],[24,[[2,[4]]]],[[],[[2,[29]]]],[24,[[2,[29]]]],[24,[[2,[29]]]],0,[[],21],[[],24],[[],25],[14,[[2,[21]]]],[14,[[2,[22]]]],[14,[[2,[23]]]],[14,[[2,[24]]]],[14,[[2,[25]]]],[14,[[2,[30]]]],[[21,21],4],[[22,22],4],[[23,23],4],[[24,24],4],[[25,25],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[21,7],8],[[22,7],8],[[23,7],8],[[24,7],8],[[24,7],8],[[25,7],8],[[]],[[]],[[]],[23,22],[[]],[[]],[[]],[[]],[6,24],[[],24],[[22,31]],[[23,31]],[[24,31]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,24],[[],6],[[],6],[[],6],[24,24],[[22,22],[[32,[26]]]],[[23,23],[[32,[26]]]],[[24,24],[[32,[26]]]],0,0,[[21,17],2],[[22,17],2],[[23,17],2],[[24,17],2],[[25,17],2],[[30,17],2],[24],[[]],[[]],[[]],[[]],[[]],[[],5],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,33],26],[[34,34],26],[[35,35],26],[[36,36],26],[[37,37],26],[[38,38],26],[[39,39],26],[[40,40],26],0,[14,[[2,[33]]]],[14,[[2,[34]]]],[14,[[2,[35]]]],[14,[[2,[36]]]],[14,[[2,[37]]]],[14,[[2,[38]]]],[14,[[2,[39]]]],[14,[[2,[40]]]],[14,[[2,[43]]]],[14,[[2,[44]]]],[14,[[2,[41]]]],[14,[[2,[42]]]],[[],6],[[],6],[[],6],[[],6],[[33,33],4],[[34,34],4],[[35,35],4],[[36,36],4],[[37,37],4],[[38,38],4],[[39,39],4],[[40,40],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[33,7],8],[[33,7],8],[[34,7],8],[[35,7],8],[[36,7],8],[[37,7],8],[[38,7],8],[[39,7],8],[[40,7],8],[[43,7],8],[[43,7],8],[[44,7],8],[[44,7],8],[[41,7],8],[[41,7],8],[[42,7],8],[[42,7],8],[[]],[[],33],[[]],[[]],[33,34],[[]],[33,35],[[]],[33,36],[33,37],[[]],[33,38],[[]],[33,39],[[]],[[]],[33,40],[[]],[[]],[45,41],[35,41],[37,41],[39,41],[36,41],[[]],[40,41],[46,41],[33,41],[38,41],[[],41],[34,41],[[]],[[33,31]],[[34,31]],[[35,31]],[[36,31]],[[37,31]],[[38,31]],[[39,31]],[[40,31]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[6,33],[[33,33],[[32,[26]]]],[[34,34],[[32,[26]]]],[[35,35],[[32,[26]]]],[[36,36],[[32,[26]]]],[[37,37],[[32,[26]]]],[[38,38],[[32,[26]]]],[[39,39],[[32,[26]]]],[[40,40],[[32,[26]]]],[47],[47],[47],[47],[47],[[33,17],2],[[34,17],2],[[35,17],2],[[36,17],2],[[37,17],2],[[38,17],2],[[39,17],2],[[40,17],2],[[43,17],2],[[44,17],2],[[41,17],2],[[42,17],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[43,6],[44,6],[41,6],[42,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[48,48],[[]],0,[[],48],[14,[[2,[48]]]],[[48,48],4],[[],4],[[],4],[[48,7],8],[[48,7],8],[[]],[[]],[[],48],[[48,17],2],[[]],[[],5],[[],2],[[],2],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,6],[[]],[[]],[49,49],[[]],[[49,49],26],[[],2],[[],[[2,[4]]]],[[6,[28,[27]]],[[2,[29]]]],[[],[[2,[4]]]],[[],[[2,[29]]]],[[],[[2,[4]]]],[[],[[2,[29]]]],[[],[[2,[29]]]],[[],[[2,[29]]]],[14,[[2,[49]]]],[[],6],[[49,49],4],[[],4],[[],4],[[49,7],8],[[]],[5,49],[6],[[]],[[49,31]],[[]],[5,50],[[],6],[[49,49],[[32,[26]]]],[[49,17],2],[[]],[[]],[[],2],[[],2],[[],10],[49,6],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,51],[52,52],[53,53],[54,54],[55,55],[[]],[[]],[[]],[[]],[[]],[[],51],[[],52],[[],53],[[],54],[[],55],[14,[[2,[51]]]],[14,[[2,[52]]]],[14,[[2,[54]]]],[14,[[2,[55]]]],0,[[51,51],4],[[52,52],4],[[53,53],4],[[54,54],4],[[55,55],4],[[51,7],8],[[52,7],8],[[53,7],8],[[54,7],8],[[55,7],8],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],51],[[6,54,55],51],[[6,54],51],[6,51],0,0,[[51,17],2],[[52,17],2],[[54,17],2],[[55,17],2],[[51,5,54,55]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[56,56],4],[[],6],[10,6],[[[0,[57,56]]],6],[56,6],[56,10],0,[[]],[[]],[58,58],[[]],[[],58],[14,[[2,[58]]]],0,[[58,58],4],[[58,7],8],[[58,7],8],[[]],[[]],[[58,17],2],0,[[]],[[],5],[[],2],[[],2],[[],10],[[]],0,[[]],[[]],[59,59],[[]],0,[[],59],[14,[[2,[59]]]],[[59,59],4],[[59,7],8],[[59,7],8],[[]],[[]],[[],59],0,0,[59,60],[[59,60],4],[[59,17],2],[[]],[[],5],[[],2],[[],2],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[61,61],[62,62],[63,63],[[]],[[]],[[]],[[]],[[9,9],4],[[61,61],4],[[62,62],4],[[63,63],4],[[9,7],8],[[61,7],8],[[62,7],8],[[63,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[64,64],[65,65],[[]],[[]],[[64,64],4],[[65,65],4],[[64,7],8],[[65,7],8],0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],0,[[],66],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],10],[[],10],[[],10],[[]],[[]],[[]]],"c":[],"p":[[3,"Error"],[4,"Result"],[3,"ClipForm"],[15,"bool"],[3,"String"],[15,"str"],[3,"Formatter"],[6,"Result"],[4,"UiType"],[3,"TypeId"],[3,"FormWindow"],[3,"WindowOptions"],[3,"ClipFormEgui"],[8,"Deserializer"],[3,"CreationContext"],[6,"WindowResult"],[8,"Serializer"],[3,"Context"],[3,"Ui"],[3,"Frame"],[3,"IDataObject"],[3,"ClipboardMeta"],[3,"ClipboardHistory"],[3,"ClipMeta"],[3,"ProgControl"],[4,"Ordering"],[8,"ToSql"],[15,"slice"],[15,"u64"],[4,"Message"],[8,"Hasher"],[4,"Option"],[3,"DbErrorData"],[3,"DbErrorDataIo"],[3,"DbErrorDataPostgres"],[3,"DbErrorDataStd"],[3,"DbErrorDataClient"],[3,"JsonErrorData"],[3,"DbErrorDataSer"],[3,"DbErrorDataDe"],[4,"DbError"],[4,"JsonError"],[4,"AppError"],[4,"GuiError"],[3,"Error"],[3,"Error"],[3,"Demand"],[3,"DataCreationTime"],[4,"DbType"],[8,"Default"],[3,"HyperlinkMeta"],[3,"ProcessStartInfo"],[3,"HyperlinkList"],[4,"HyperlinkTypeIs"],[4,"DocumentTypeIs"],[8,"Sized"],[8,"Any"],[3,"Range"],[3,"Sequence"],[15,"i32"],[4,"UiError"],[4,"WindowType"],[4,"WindowError"],[3,"Format"],[4,"FormatType"],[3,"FormatList"],[3,"DoSerial"],[3,"PhantomError"],[8,"DbApi"],[8,"DbCrud"],[8,"DbJson"],[8,"NamedAny"]]},\
"clipmdplus_lib":{"doc":"Normal crate library documentation goes here.","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]},\
"clipmdplus_library":{"doc":"ClipMdPlus Trait Library","t":"FF","n":["imafunc","imafunc2"],"q":[[0,"clipmdplus_library"]],"d":["",""],"i":[0,0],"f":[[[],1],[1,1]],"c":[],"p":[[3,"String"]]},\
"clipmdplus_macro":{"doc":"ClipMdPlus Macro Library","t":"NOYDYEYNNOYNOYYMLLLLLLFFFOLOOOOLLLLFLLFFFLLLOFLFFLLLLLLLO","n":["CamelCase","CamelCase","Deserialize_enum","NAME_MAP","Name","NamingStyle","NamingStyle","None","ScreamingSnakeCase","ScreamingSnakeCase","Serialize_enum","SnakeCase","SnakeCase","ToString","VariantName","__private_field","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_de_arms","create_ser_arms","create_to_str_arms","csi","deref","derive_const_sequence","derive_csi_sequence","derive_fn","derive_static_sequence","eq","equivalent","fmt","fmt","format_variant","from","from","get_enum_from_input","get_naming_style_impl","get_variant_alias","hash","into","into","msequence","to_camel_case_impl","to_owned","to_screaming_snake_case_impl","to_snake_case_impl","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrap_or_return"],"q":[[0,"clipmdplus_macro"]],"d":["","doc todo CamelCase to_camel_case_impl","doc todo create_ser_arms","doc todo create_ser_arms","Name","","doc todo NamingStyle get_naming_style","","","doc todo ScreamingSnakeCase to_screaming_snake_case_impl","doc todo create_ser_arms","","doc todo SnakeCase ","doc todo ToString to_string_enum","VariantName","","","","","","","","doc todo create_de_arms","doc todo create_ser_arms","doc todo create_to_str_arms","duplicated mtermion macros: termion’s Create a …","","Derive a constant msequence (static) struct.","termion’s Derive a CSI sequence struct. …","derive_fn!(“Get user name.”, ACCT, “…","Derive a non-CSI msequence (static) struct. …","","","","","Variant to String conversion doc todo format_variant","Returns the argument unchanged.","Returns the argument unchanged.","Checks that the passed input’s .data is an Enum and …","Attribute to NamingStyle conversion doc todo …","Takes a Variant, checks for the _ident, if “serde”, if …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","CamelCase conversion","","SCREAMING_SNAKE_CASE conversion doc todo …","SnakeCase conversion doc todo to_snake_case_impl","","","","","","","",""],"i":[1,0,0,0,0,0,0,1,1,0,0,1,0,0,0,4,1,4,1,4,1,1,0,0,0,0,4,0,0,0,0,1,1,1,1,0,1,4,0,0,0,1,1,4,0,0,1,0,0,1,1,4,1,4,1,4,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[[2,1],3],[[2,1],3],[[2,1],3],0,[4,[[5,[1]]]],0,0,0,0,[[1,1],6],[[],6],[[1,7],8],[[1,7],8],[[9,1],10],[[]],[[]],[11,2],[3,1],[9,[[12,[10]]]],[[1,13]],[[]],[[]],0,[14,10],[[]],[14,10],[14,10],[[],10],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0],"c":[],"p":[[4,"NamingStyle"],[3,"DataEnum"],[8,"Iterator"],[3,"NAME_MAP"],[3,"HashMap"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Variant"],[3,"String"],[3,"DeriveInput"],[4,"Option"],[8,"Hasher"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"derive_more":{"doc":"<code>derive_more</code>","t":"IAAAAAAOAAAAAAAAAAAAAAAAKAAAAFFFFFFFFFFFFFFDDDMFLLLLLLMLFLFLLLLLLLLLLLLMLLLLLLMMMMFFMLLLLLLLLLMDFFFMLLMMFLFLFLFFFLLFFLLFMLLLFFFFFFFFFFFFFFFFFNNDGDEFFFFFFFFMFFLLLLLLFLLLLMLLLFMMLLFLLLLLLMLMLMFLFFMLLLLLLLLLLLLFFFDEDNDGGDDDNNNNEDDNFFFFFFFLFLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLMLLLLMMMFLMMMMMMLLLLMMLLLLLLLLLLLLMMFFFFLLMMMMMMMLLMMMMLLLLLLLLLLLLFLLMMMMMLFLLLFMMFFLMMMMLLLMMLMLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMFMMMMMMMMMMMMLLLLL","n":["Output","add_assign_like","add_helpers","add_like","as_mut","as_ref","constructor_derived","create_derive","deref","deref_mut","display","error","from","from_str","index","index_mut","into","into_iterator","is_variant","mul_assign_like","mul_helpers","mul_like","not_like","parsing","process","sum_like","try_into","unwrap","utils","expand","struct_exprs","tuple_exprs","enum_content","expand","struct_content","tuple_content","expand","expand","expand","struct_body","tuple_body","expand","expand","ParseResult","Placeholder","State","arms","attribute_name_to_trait_name","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","default","display_as_helper_struct","eq","expand","find_meta","fmt","from","from","from","get_match_arms_and_extra_bounds","get_matcher","get_proper_bound_syntax","get_proper_fmt_syntax","get_used_type_params_bounds","infer_fmt","infer_type_params_bounds","input","into","into","into","parse_fmt_string","parse_meta_bounds","parse_meta_fmt","position","requires_helper","trait_attr","trait_name","trait_name_to_attribute_name","trait_name_to_trait_bound","trait_path","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_params","ParsedFields","add_bound_if_type_parameter_used_in_type","allowed_attr_params","assert_iter_contains_zero_or_one_item","backtrace","borrow","borrow_mut","bounds","data","expand","from","infer_source_field","into","is_type_path_ends_with_segment","new","parse_field_impl","parse_fields","parse_fields_impl","render_backtrace_as_enum_variant_match_arm","render_backtrace_as_struct","render_enum","render_some","render_source_as_enum_variant_match_arm","render_source_as_struct","render_struct","source","try_from","try_into","type_id","enum_from","expand","struct_from","expand","panic_one_field","expand","expand","expand","expand","expand","expand","generics_and_exprs","expand","enum_output_type_and_content","expand","struct_content","tuple_content","Failed","Matched","ParseError","ParseResult","ParseState","RuleResult","__parse_all_placeholders","__parse_arg","__parse_discard_any","__parse_discard_doubles","__parse_format","__parse_format_spec","__parse_placeholder_inner","__parse_ty","_phantom","all_placeholders","any_char","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","char_range_at","clone","clone","clone_into","clone_into","column","description","eq","equivalent","escape_default","expected","expected","fmt","fmt","format","from","from","from","into","into","into","line","mark_failure","max_err_pos","new","offset","pos_to_line","provide","slice_eq","slice_eq_case_insensitive","suppress_fail","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","expand","expand","expand","AttrParams","DeriveType","DeterministicState","Enum","FullMetaInfo","HashMap","HashSet","MetaInfo","MultiFieldData","MultiVariantData","Mut","Named","No","Ref","RefType","SingleFieldData","State","Unnamed","add_extra_generic_param","add_extra_generic_type_param","add_extra_ty_param_bound","add_extra_ty_param_bound_op","add_extra_ty_param_bound_ref","add_extra_type_param_bound_op_output","add_extra_where_clauses","add_trait_path_type_param","add_where_clauses_for_new_ident","additional_types","assert_single_enabled_field","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_hasher","casted_trait","casted_traits","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default_info","derive_type","enabled","enabled","enabled_fields","enabled_fields_data","enabled_fields_idents","enabled_fields_indexes","enabled_infos","enabled_variant_data","enabled_variant_states","enabled_variants","enum_","eq","eq","equivalent","equivalent","field","field","field_ident","field_idents","field_idents","field_idents","field_indexes","field_type","field_types","fields","fields","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from","from","from","from","from","from","from","from_attr_name","from_variant","full_meta_infos","generics","get_field_types","get_field_types_iter","get_if_type_parameter_used_in_type","get_meta_info","hash","ignore_and_forward","impl_generics","impl_generics","impl_generics","info","info","infos","infos","initializer","initializer","input","input_type","input_type","input_type","into","into","into","into","into","into","into","into","into","into","into_full","is_ref","is_type_parameter_used_in_type","lifetime","matcher","member","members","method_ident","method_ident","multi_field_data","mutability","named_to_vec","new","new","new_impl","numbered_vars","owned","owned","panic_one_field","parse_punctuated_nested_meta","pattern_ref","ref_","ref_","ref_mut","ref_mut","ref_types","reference","reference_with_lifetime","source","state","struct_","struct_","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trait_attr","trait_ident","trait_module","trait_name","trait_path","trait_path","trait_path","trait_path","trait_path_params","trait_path_with_params","trait_path_with_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty_generics","ty_generics","ty_generics","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","unnamed_to_vec","variant","variant","variant_info","variant_name","variant_states","variant_states","variant_type","variants","variants","where_clause","where_clause","where_clause","with_attr_params","with_field_ignore","with_field_ignore_and_forward","with_field_ignore_and_refs","with_type_bound"],"q":[[0,"derive_more"],[29,"derive_more::add_assign_like"],[30,"derive_more::add_helpers"],[32,"derive_more::add_like"],[36,"derive_more::as_mut"],[37,"derive_more::as_ref"],[38,"derive_more::constructor_derived"],[41,"derive_more::deref"],[42,"derive_more::deref_mut"],[43,"derive_more::display"],[95,"derive_more::error"],[124,"derive_more::from"],[127,"derive_more::from_str"],[129,"derive_more::index"],[130,"derive_more::index_mut"],[131,"derive_more::into"],[132,"derive_more::into_iterator"],[133,"derive_more::is_variant"],[134,"derive_more::mul_assign_like"],[135,"derive_more::mul_helpers"],[136,"derive_more::mul_like"],[137,"derive_more::not_like"],[141,"derive_more::parsing"],[207,"derive_more::sum_like"],[208,"derive_more::try_into"],[209,"derive_more::unwrap"],[210,"derive_more::utils"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides the hook to expand <code>#[derive(Constructor)]</code> into an …","","","Provides the hook to expand <code>#[derive(Deref)]</code> into an …","Provides the hook to expand <code>#[derive(DerefMut)]</code> into an …","Result type of <code>State::get_match_arms_and_extra_bounds()</code>.","Representation of formatting placeholder.","","The match arms destructuring <code>self</code>.","","","","","","","","Any trait bounds that may be required.","","Create a helper struct that is required by some <code>Display</code> …","","Provides the hook to expand <code>#[derive(Display)]</code> into an …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parses <code>Placeholder</code>s from a given formatting string.","","","Position of formatting argument to be used for this …","<code>true</code> if the Display impl requires the <code>DisplayAs</code> helper …","","Name of <code>std::fmt</code> trait to be used for rendering this …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Checks if <code>ty</code> is <code>syn::Type::Path</code> and ends with segment …","","","","","","","","","","","","","","","","","Provides the hook to expand <code>#[derive(From)]</code> into an …","","Provides the hook to expand <code>#[derive(FromStr)]</code> into an …","","Provides the hook to expand <code>#[derive(Index)]</code> into an …","Provides the hook to expand <code>#[derive(IndexMut)]</code> into an …","Provides the hook to expand <code>#[derive(Into)]</code> into an …","Provides the hook to expand <code>#[derive(IntoIterator)]</code> into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Provides the hook to expand <code>#[derive(TryInto)]</code> into an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,15,12,13,15,12,13,12,12,0,13,0,15,13,15,12,13,15,15,15,15,15,15,15,15,15,12,13,13,15,15,13,12,15,13,0,0,15,15,12,13,15,12,13,15,12,13,15,0,0,0,0,33,33,33,33,33,0,33,0,33,0,33,0,0,0,33,33,0,0,33,33,0,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,42,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,41,42,43,41,42,43,0,42,43,42,43,43,43,43,43,0,41,43,43,43,0,41,42,43,41,42,43,43,41,41,41,43,0,43,0,0,41,42,43,43,41,42,43,41,42,43,41,42,43,0,0,0,0,0,0,50,0,0,0,0,0,0,40,50,40,40,0,0,0,50,0,0,0,0,0,0,0,38,0,48,38,51,38,52,25,40,50,31,49,35,48,51,38,52,25,40,50,31,49,35,48,51,25,49,35,25,40,50,31,49,35,48,51,25,40,50,31,49,35,48,51,25,31,48,51,38,38,48,51,38,38,38,38,38,38,38,38,31,40,50,40,50,31,49,49,0,38,35,35,49,35,38,35,40,50,48,51,48,51,38,52,25,40,50,31,49,35,48,51,40,38,38,38,0,0,0,0,40,31,52,49,35,49,48,52,35,49,35,38,52,49,35,38,52,25,40,50,31,49,35,48,51,51,40,0,40,35,49,35,38,35,49,40,0,38,31,38,0,48,51,0,0,40,48,51,48,51,48,40,40,51,35,31,31,25,40,50,31,49,35,48,51,38,38,38,38,38,52,49,35,38,49,35,38,52,25,40,50,31,49,35,48,51,38,52,25,40,50,31,49,35,48,51,52,49,35,38,52,25,40,50,31,49,35,48,51,51,0,38,31,35,35,38,52,35,38,52,52,49,35,38,38,38,38,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,[[2,3],4],[[[6,[5]],7],[[8,[4]]]],[[[6,[5]],7],[[8,[4]]]],[[7,9,7],4],[[2,3],4],[[7,[6,[5]],7],4],[[10,[6,[5]],7],4],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],[[2,3],4],[[7,[6,[5]]]],[[7,[6,[5]]]],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],0,0,0,0,[3,3],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],12],[[],4],[[13,13],14],[[2,3],[[11,[4]]]],[[15,[6,[16]],3],[[11,[[18,[17]]]]]],[[13,19],20],[[]],[[]],[[]],[15,[[11,[12]]]],[[15,21],4],[15,22],[15,22],[[15,21,17],[[27,[23,[26,[24,25]],25]]]],[[15,21,7],[[11,[4]]]],[[15,21],[[27,[23,[26,[24,25]],25]]]],0,[[]],[[]],[[]],[3,[[8,[13]]]],[[15,28],[[11,[[27,[23,[26,[24,25]],25]]]]]],[[15,17,14],11],0,0,0,0,[3,3],[3,24],0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],0,0,[[[26,[23,25]],[26,[7,25]],23]],[[],31],[[32,3],[[11,[18]]]],0,[[]],[[]],0,0,[[2,3],[[11,[4]]]],[[]],[[[6,[5]],33],[[18,[34]]]],[[]],[[23,3],14],[35,33],[[36,34,[0,[32,37]],3,36],[[11,[18]]]],[[[26,[7,25]],38],[[11,[33]]]],[[38,36],[[11,[33]]]],[33,[[18,[4]]]],[33,[[18,[4]]]],[[[26,[7,25]],38],11],[10,4],[33,[[18,[4]]]],[33,[[18,[4]]]],[[[26,[7,25]],38],11],0,[[],29],[[],29],[[],30],[[2,38],4],[[2,3],[[11,[4]]]],[[2,38],4],[[2,3],[[11,[4]]]],[3,39],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],[[35,7,4,40]],[[2,3],[[11,[4]]]],[[2,9,7]],[[2,3],4],[[7,[6,[5]],7],4],[[10,[6,[5]],7],4],0,0,0,0,0,0,[[3,41,34],[[42,[[8,[3]]]]]],[[3,41,34],[[42,[34]]]],[[3,41,34],[[42,[[18,[3]]]]]],[[3,41,34],[[42,[[18,[3]]]]]],[[3,41,34],42],[[3,41,34],[[42,[[18,[3]]]]]],[[3,41,34],[[42,[[18,[3]]]]]],[[3,41,34],[[42,[3]]]],0,[3,[[29,[[8,[3]],43]]]],[[3,41,34],42],[[]],[[]],[[]],[[]],[[]],[[]],[[3,34]],[[[42,[37]]],[[42,[37]]]],[43,43],[[]],[[]],0,[43,3],[[43,43],14],[[],14],[3,44],0,0,[[43,19],[[29,[45]]]],[[43,19],20],[3,[[29,[43]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[41,34,3],42],0,[[],41],0,[[3,34]],[46],[[3,41,34,3],42],[[3,41,34,3],42],0,[[]],[[]],[[],44],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],[[2,3],[[11,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[47,4],47],[[47,4],47],[[47,4],47],[[47,7],47],[[47,4,40],47],[[47,7],47],[[47,4],47],[[38,4]],[[47,[6,[5]],7,4,14],47],[[48,40],[[26,[23,25]]]],[38,49],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25],0,0,[25,25],[40,40],[50,50],[31,31],[49,49],[35,35],[48,48],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],31],[[],48],[[],51],0,0,0,0,[38,[[8,[5]]]],[38,35],[38,[[8,[4]]]],[38,[[8,[34]]]],[38,[[8,[48]]]],[38,52],[38,[[8,[38]]]],[38,[[8,[53]]]],0,[[40,40],14],[[50,50],14],[[],14],[[],14],0,0,0,[[[6,[5]]],[[8,[7]]]],[38,[[8,[4]]]],0,0,0,0,0,0,[[40,19],20],[[50,19],20],[[48,19],20],[[51,19],20],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,40],[[2,3,4,44,31,53,48],[[11,[38]]]],0,0,[[[6,[5]]],[[8,[23]]]],[[[6,[5]]],[[54,[32]]]],[[[26,[7,25]],23],[[18,[23]]]],[[3,[6,[16]],[6,[3]]],[[11,[51]]]],[[40,55]],[[],31],0,0,0,0,0,0,0,[[49,[6,[10]]],4],[[35,[6,[10]]],4],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[51,48],48],[40,14],[[[26,[7,25]],23],14],[40,4],[[35,[6,[34]],[6,[10]]],4],0,0,0,0,0,[40,4],[56,[[8,[5]]]],[[2,3,4,44],[[11,[38]]]],[[[8,[3]]],31],[[2,3,4,44,31,14],[[11,[38]]]],[[34,3],[[8,[7]]]],0,0,[[3,3],39],[[51,[59,[57,58]],[6,[3]],[18,[3]]],11],[40,4],0,0,0,0,[48,[[8,[40]]]],[40,4],[40,4],0,0,[[[8,[3]]],31],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[60,[[8,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[2,3,4,44,31],[[11,[38]]]],[[2,3,4,44],[[11,[38]]]],[[2,3,4,44],[[11,[38]]]],[[2,3,4,44],[[11,[38]]]],[[2,3,4,44,31,14],[[11,[38]]]]],"c":[],"p":[[3,"TokenStream"],[3,"DeriveInput"],[15,"str"],[3,"TokenStream"],[3,"Field"],[15,"slice"],[3,"Ident"],[3,"Vec"],[3,"DataEnum"],[8,"ToTokens"],[6,"Result"],[3,"ParseResult"],[3,"Placeholder"],[15,"bool"],[3,"State"],[3,"Attribute"],[4,"Meta"],[4,"Option"],[3,"Formatter"],[6,"Result"],[4,"Fields"],[8,"Display"],[4,"Type"],[3,"TraitBound"],[3,"DeterministicState"],[3,"HashSet"],[3,"HashMap"],[3,"LitStr"],[4,"Result"],[3,"TypeId"],[3,"AttrParams"],[8,"Iterator"],[3,"ParsedFields"],[15,"usize"],[3,"MultiFieldData"],[8,"Fn"],[8,"Clone"],[3,"State"],[15,"never"],[4,"RefType"],[3,"ParseState"],[4,"RuleResult"],[3,"ParseError"],[3,"String"],[3,"Error"],[3,"Demand"],[3,"Generics"],[3,"FullMetaInfo"],[3,"SingleFieldData"],[4,"DeriveType"],[3,"MetaInfo"],[3,"MultiVariantData"],[3,"Variant"],[3,"Box"],[8,"Hasher"],[3,"FieldsNamed"],[4,"NestedMeta"],[3,"Comma"],[3,"Punctuated"],[3,"FieldsUnnamed"],[8,"Output"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};