<!DOCTYPE html>
<!-- <html xmlns="http://www.w3.org/1999/xhtml"> -->
<!-- Mdm Application Framework - (c)2011 David Horsman & Macroscope Design Matrix -->
<html lang="en">

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <!--#include virtual="/mdmsite/RelsNext/TemplatePage/MdmPtDocHeader.shtml"-->
    <meta name="Author" content="David G. Horsman">
    <meta name="generator" content="CoffeeCup HTML Editor (www.coffeecup.com)">
    <meta name="created" content="Sat, 07 Aug 2010 02:13:02 GMT">
    <link rel="stylesheet" type="text/css" href="../Css/MdmBaseTags.css">
    <link rel="stylesheet" type="text/css" href="../Css/MdmColourPallet.css">
    <link rel="stylesheet" type="text/css" href="../Css/MdmBodyHeader.css">
    <link rel="stylesheet" type="text/css" href="../Css/MdmMenu.css">
    <link rel="stylesheet" type="text/css" href="../Css/MdmBodyBoxWide.css">
    <link rel="stylesheet" type="text/css" href="../Css/MdmBodyText.css">
    <link rel="stylesheet" type="text/css" href="../Css/Page/JefferyABeckerGenList.css">
    <title>Application Framework - Operating System Support (OSS)</title>
</head>

<body id="JefferyABeckerGenList" class="BodyBox">
    <!--** Body Area **-->
    <div id="BodyArea" class="BodyAreaClass">
        <!--*-->
        <div id="BodyMainContainer" class="BodyMainBorder BodyMainContainer">
            <!--** Center Main Column **-->
            <div id="BodyMainTop">
                <!-- x -->
            </div>
            <!--*-->
            <!--** Center Main Column **-->
            <div id="BodyMainCenter" class="BorderThin">
                <!-- x -->
                <!--** Content Blocks **-->
                <!-- x -->
                <!--** Block 1 **-->
                <div id="DivB1" class="DivB1 BodyParaBox BorderThin BodyParaBoxBg">
                    <h3 id="B1D1H1" class="BodyPara cSd CPT">
                        Jeffery Becker's<br>
                        Generics based List<br>
                        "LazyList"
                    </h3>
                    <p id="B1D1P1" class="BodyPara aLeft CP">
                        This framework includes trace, status line, logging,
                        threaded messaging (both user interface and functions,)
                        console, disk and database file I/O, error handling,
                        start/pause/cancel, progress bar and other features.
                    </p>
                    <div id="B1D2" class="BodyParaLeft CalloutBorder">
                        <h4 id="B1D2H1" class="BodyPara cSd CPT">
                            Jeffery Becker's<br>
                            code<br><br>
                        </h4>
                        <p id="B1D2P1" class="BodyPara aLeft CP">
                            <code>
using System;<br>
using System.Collections.Generic;<br>
using System.Text;<br>
namespace Example<br>
{<br>
        public class LazyList: IList<br>
    {<br>
        private List _innerList;<br>
        private IEnumerable _lazyLoader;<br>
        private void ensureList()<br>
        {<br>
            if(_innerList == null)<br>
                _innerList = new List(_lazyLoader);<br>
        }<br>
        #region IList Members<br>
        public int IndexOf(T item)<br>
        {<br>
            ensureList();<br>
            ensureList();<br>
            return _innerList.IndexOf(item);<br>
        }<br>
        public void Insert(int index, T item)<br>
        {<br>
            ensureList();<br>
            _innerList.Insert(index, item);<br>
        }<br>
        public void RemoveAt(int index)<br>
        {<br>
            ensureList();<br>
            _innerList.RemoveAt(index);<br>
        }<br>
        public T this[int index]<br>
        {<br>
            get<br>
            {<br>
                ensureList();<br>
                return _innerList[index];<br>
            }<br>
            set<br>
            {<br>
                ensureList();<br>
                _innerList[index] = value;<br>
            }<br>
        }<br>
        #endregion<br>
<br>
        #region ICollection Members<br>
        public void Add(T item)<br>
        {<br>
            ensureList();<br>
            _innerList.Add(item);<br>
        }<br>
        public void Clear()<br>
        {<br>
            ensureList();<br>
            _innerList.Clear();<br>
        }<br>
        public bool Contains(T item)<br>
        {<br>
            ensureList();<br>
            return _innerList.Contains(item);<br>
        }<br>
        public void CopyTo(T[] array, int arrayIndex)<br>
        {<br>
            ensureList();<br>
            _innerList.CopyTo(array, arrayIndex);<br>
        }<br>
        public int Count<br>
        {<br>
            get { ensureList();  return _innerList.Count; }<br>
        }<br>
        public bool IsReadOnly<br>
        {<br>
            get { return false; }<br>
        }<br>
        public bool Remove(T item)<br>
        {<br>
            ensureList();<br>
            return _innerList.Remove(item);<br>
        }<br>
        #endregion<br>
<br>
        #region IEnumerable Members<br>
        public IEnumerator GetEnumerator()<br>
        {<br>
            ensureList();<br>
            return _innerList.GetEnumerator();<br>
        }<br>
        #endregion<br>
<br>
        #region IEnumerable Members<br>
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()<br>
        {<br>
            ensureList();<br>
            return _innerList.GetEnumerator();<br>
        }<br>
        #endregion<br>
    }<br>
}<br>
</code>
                        </p>
                    </div>
                    <!--*-->
                    <p id="B1D1P2" class="BodyPara aLeft CP">
                        The pre-existing design additionally includes secure user
                        sign-on, company control, smart file locking and metrics,
                        hardware usage configuration, scheduled tasks with input,
                        minor accounting controls, resource management and other features.
                        These features were placed in a later phase pending the finalized
                        design of the first set which were more closely tied to the
                        .Net IDE framework.
                    </p>
                    <div id="B1C2" class="BodyParaRight">
                        <!-- x -->
                        <a id="B1C2A" href="#" class="CalloutBorder CalloutContent CPA">
                            <span id="B2C1A1" class="CPA aCenter">
                                MVVM<br>Controller<br>list of<br>methods.
                            </span>
                            <img id="B1C2Img1Thumb" src="../Images/McontrollerMethodList.jpg"
                                alt="ImportTld Main Page Start" class="CPPImageThumb CPPImageThumbRight CPA">
                            <!-- x -->
                            <!-- <div id="B1C2ImgSet"
      							class="CalloutBorder CPP"> -->
                            <img id="B1C2Img1" src="../Images/McontrollerMethodList.jpg" alt="ImportTld Main Page Start"
                                class="CPPImage CPP CPPImageLeft CalloutBorder ">
                            <!-- </div> -->
                            <!-- x -->
                        </a>
                    </div>
                    <p id="B1D1P4" class="BodyPara aLeft CP">
                        There is first the expectation that a consistent UI will
                        be developed regardless.
                        Second, an application specific design is expected to handle
                        issues like exceptions and cross thread communications.
                        Finally, there are many feautures so pervasive that
                        integration is reasonable.
                        <br><br>
                    </p>
                </div>
                <!--*-->
                <!-- <p class="FixClear"></p> -->
                <!-- <br> -->
            </div>
            <!--*-->
            <!--*-->
        </div>
        <!--** End of Body Main Center *-->
    </div>
    <!--** End of Main Page Body BodyMainContainer *-->
</body>

</html>